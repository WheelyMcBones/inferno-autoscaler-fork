name: CI - Release - Docker Container Image

on:
  push:
    tags:
      - 'v*'  # Runs when a tag like v0.1.0 is pushed
  release:
    types: [published]  # Also runs when a GitHub release is published

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set project name from repository
        id: version
        run: |
          repo="${GITHUB_REPOSITORY##*/}"
          echo "project_name=$repo" >> "$GITHUB_OUTPUT"

      - name: Print project name
        run: echo "Project is ${{ steps.version.outputs.project_name }}"

      - name: Determine tag name
        id: tag
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            echo "tag=${GITHUB_REF##refs/tags/}" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF##refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push multi-arch image
        run: |
          IMAGE=ghcr.io/llm-d/${{ steps.version.outputs.project_name }}
          VERSION_TAG=${{ steps.tag.outputs.tag }}
          echo "Building $IMAGE with tags $VERSION_TAG and latest for linux/amd64 and linux/arm64"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t $IMAGE:$VERSION_TAG \
            -t $IMAGE:latest .

      - name: Run Trivy scan
        uses: ./.github/actions/trivy-scan
        with:
          image: ghcr.io/llm-d/${{ steps.version.outputs.project_name }}:${{ steps.tag.outputs.tag }}
